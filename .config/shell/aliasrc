#!/bin/sh

# Author:       Action <dev@action-server.com>
# License:      GNU GPLv3
# Description:  A collection of aliases

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
ALIASRC="${XDG_CONFIG_HOME}"/shell/aliasrc

# Shortcut
alias \
  balias="[ -f ${ALIASRC} ] && ${EDITOR} ${ALIASRC} && . ${ALIASRC}" \
	rm='f(){ echo Use del!; }; f' \
	make='f(){ echo Run in container!; }; f' \
	n='newsboat' \
  m='neomutt' \
	e='lf' \
  mutt='neomutt' \
  v='nvim' \
  vim='nvim' \
  copy='xclip -selection clipboard' \
  myip='curl -L https://ipinfo.io/ip' \
  myipv6='curl -L https://v6.ipinfo.io/ip' \
  del='trash-put' \
  cpu='cpupower frequency-info' \
  powersave='sudo cpupower frequency-set --governor powersave' \
  performance='sudo cpupower frequency-set --governor performance' \
  ondemand='sudo cpupower frequency-set --governor ondemand' \
  conservative='sudo cpupower frequency-set --governor conservative' \
  schedutil='sudo cpupower frequency-set --governor schedutil' \
	freq='f(){ sudo cpupower frequency-set --max "${@}" }; f' \
	xo='f(){ nohup xdg-open "${@}" >/dev/null 2>&1 & }; f' \
	nh='f(){ nohup "${@}" >/dev/null 2>&1 & }; f' \
	mycc='c99 -Wall -g -o binary' \
	t='tmux attach' \
	todo="${EDITOR} ${XDG_DOCUMENTS_DIR}/TODO" \
	alarm='f(){ termdown "${1}" && notify-send "Alarm" "${2}" && yes "${2:-Alarm}" | espeak || notify-send "Alarm cancelled" "${2}"; }; f' \
	random='f(){ expr "${1}" + "$RANDOM" % "${2}" }; f'

# Fix
alias \
  ssh='TERM=''xterm-256color'' ssh' \
	mbsync="mbsync -c ${XDG_CONFIG_HOME}/isync/mbsyncrc"

# System
alias \
  ls='ls --color=auto --group-directories-first -v' \
  la='ls -A' \
  l='ls -Alh' \
  ll='ls -AlhF' \
  grep='grep --color=auto' \
  diff='diff --color=auto' \
	free='free -h'

# Git
alias \
  gits='git status' \
  g='git status' \
  gitl='git log' \
  gitch='git checkout' \
  gitb='git branch' \
  gitd='git diff' \
	gitc='git commit' \
	gita='git add' \
	gitds='git diff --staged'

# Docker
alias \
  dkps='docker ps -a' \
  dkr='docker run' \
  dks='docker stop' \
  dkrm='docker rm' \
  dkrmi='docker rmi' \
  dkcu='docker-compose up' \
  dkcd='docker-compose down' \
  dkcr='docker-compose restart'

# Pacman
alias \
	paci='f(){ sudo pacman -S "${@}" && notify-send "Pacman" "Package(s) installed"; }; f' \
	pacr='sudo pacman -Rns' \
	pacs='pacman -Ss' \
	pacw='sudo pacman -Syuw --noconfirm && flatpak update --assumeyes --no-deploy && notify-send "Package Manager" "Updates downloaded" || notify-send "Package Manager" "Update failed"' \
	pacu='sudo pacman -Syu --noconfirm && flatpak update --assumeyes && notify-send "Package Manager" "Updates installed" || notify-send "Package Manager" "Update failed"'
